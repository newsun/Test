<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
	version="2.0">

	<!-- this persistence unit is for testing -->
	<persistence-unit name="springJpaPersistenceUnit"
		transaction-type="RESOURCE_LOCAL">
		<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
		<class>com.symbio.sbtm.model.Role</class>
		<class>com.symbio.sbtm.model.User</class>
		<class>com.symbio.sbtm.model.OS</class>
		<class>com.symbio.sbtm.model.Duration</class>
		<class>com.symbio.sbtm.model.Strategy</class>
		<class>com.symbio.sbtm.model.Project</class>
		<class>com.symbio.sbtm.model.Build</class>
		<class>com.symbio.sbtm.model.Area</class>
		<class>com.symbio.sbtm.model.Charter</class>
		<class>com.symbio.sbtm.model.Bug</class>
		<class>com.symbio.sbtm.model.Issue</class>
		<class>com.symbio.sbtm.model.DataFile</class>
		<properties>
			<!-- value='create' to build a new database on each run; value='update' 
				to modify an existing database; value='create-drop' means the same as 'create' 
				but also drops tables when Hibernate closes; value='validate' makes no changes 
				to the database -->
			<property name="hibernate.hbm2ddl.auto" value="update" />
			<property name="hibernate.connection.driver_class" value="com.mysql.jdbc.Driver" />
			<property name="hibernate.connection.url"
				value="jdbc:mysql://localhost:3306/sbtm?relaxAutoCommit=true&amp;zeroDateTimeBehavior=round" />
			<property name="hibernate.connection.username" value="root" />
			<property name="hibernate.connection.password" value="test" />
			<property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5Dialect" />
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.format_sql" value="true" />
			<property name="hibernate.use_sql_comments" value="true" />
			<property name="hibernate.connection.autocommit" value="true" />
			<property name="hibernate.cache.use_second_level_cache"
				value="true" />
			<property name="hibernate.cache.use_query_cache">true</property>
			<property name="hibernate.cache.provider_class"
				value="net.sf.ehcache.hibernate.SingletonEhCacheRegionFactory" />
		</properties>
	</persistence-unit>
</persistence> 